@page "/alerts/create"
@using PumpStationManagemnet_BlazorApp.DTOs
@using PumpStationManagemnet_BlazorApp.Models
@using PumpStationManagemnet_BlazorApp.Services
@using PumpStationManagemnet_BlazorApp.Enums
@inject AlertService AlertService
@inject PumpService PumpService
@inject UserService UserService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
<h3>CreateAlert</h3>

<EditForm Model="@alertDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Máy bơm</label>
        <InputSelect class="form-control" @bind-Value="alertDto.PumpId">
            <option value="">Không chọn</option>
            @foreach (var pump in pumps)
            {
                <option value="@pump.PumpId">@pump.PumpName</option>
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label class="form-label">Loại cảnh báo</label>
        <InputSelect class="form-control" @bind-Value="alertDto.AlertType">
            @foreach (var option in alertTypes)
            {
                <option value="@Convert.ToInt32(option.Key)">@option.Value</option>
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label class="form-label">Nội Dung</label>
        <InputTextArea class="form-control" @bind-Value="alertDto.AlertMessage" />
    </div>
    <button type="submit" class="btn btn-primary">Tạo</button>
    <a class="btn btn-secondary ms-2" href="/alerts">Hủy</a>
</EditForm>

@code {
    private AlertDTO alertDto = new();
    private List<Pump> pumps = new();
    private List<KeyValuePair<Enum, string>> alertTypes = new();
    protected override async Task OnInitializedAsync()
    {
        alertTypes = EnumHelper.GetEnumListWithDescriptions<AlertType>();
        pumps = await PumpService.GetPumpsAsync();
    }

    private async Task HandleValidSubmit()
    {
        alertDto.CreatedBy = 1;
        var response = await AlertService.CreateAlertAsync(alertDto);
        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "Tạo cảnh báo thành công!");
            NavigationManager.NavigateTo("/alerts");
        }
        else
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            await JS.InvokeVoidAsync("alert", $"Lỗi: {errorMessage}");
        }
    }
}