@page "/maintenancehistories/create"
@using PumpStationManagemnet_BlazorApp.DTOs
@using PumpStationManagemnet_BlazorApp.Models
@using PumpStationManagemnet_BlazorApp.Services
@using PumpStationManagemnet_BlazorApp.Enums
@inject MaintenanceService MaintenanceService
@inject PumpService PumpService
@inject UserService UserService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
<h3>CreateMaintenanceHistory</h3>

<EditForm Model="@maintenanceHistoryDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Máy bơm</label>
        <InputSelect class="form-control" @bind-Value="maintenanceHistoryDto.PumpId">
            <option value="">Không chọn</option>
            @foreach (var pump in pumps)
            {
                <option value="@pump.PumpId">@pump.PumpName</option>
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label class="form-label">Loại bảo trì</label>
        <InputSelect class="form-control" @bind-Value="maintenanceHistoryDto.MaintenanceType">
            <option value="">Chọn loại bảo trì</option>
            @foreach (var option in maintainTypes)
            {
                <option value="@Convert.ToInt32(option.Key)">@option.Value</option>
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label class="form-label">Nội Dung</label>
        <InputTextArea class="form-control" @bind-Value="maintenanceHistoryDto.Description" />
    </div>
    <div class="mb-3">
        <label class="form-label">Ngày bắt đầu</label>
        <InputDate class="form-control" @bind-Value="maintenanceHistoryDto.StartDate" />
    </div> 
    <button type="submit" class="btn btn-primary">Tạo</button>
    <a class="btn btn-secondary ms-2" href="/maintenancehistories">Hủy</a>
</EditForm>

@code {
    private MaintenanceHistoryDTO maintenanceHistoryDto = new();
    private List<Pump> pumps = new();
    private List<KeyValuePair<Enum, string>> maintainTypes = new();
    protected override async Task OnInitializedAsync()
    {
        maintainTypes = EnumHelper.GetEnumListWithDescriptions<MaintainType>();
        pumps = await PumpService.GetPumpsAsync();
    }

    private async Task HandleValidSubmit()
    {
        var response = await MaintenanceService.CreateMaintenanceHistoryAsync(maintenanceHistoryDto);
        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "Tạo lịch sử bảo trì thành công!");
            NavigationManager.NavigateTo("/maintenancehistories");
        }
        else
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            await JS.InvokeVoidAsync("alert", $"Lỗi: {errorMessage}");
        }
    }
}